import{_ as t,r as p,o,c as e,b as n,a as c,w as l,d as s,e as i}from"./app.4c8b15c1.js";const u={},r=n("h1",{id:"react\u9875\u9762\u521D\u59CB\u5316\u6848\u4F8B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react\u9875\u9762\u521D\u59CB\u5316\u6848\u4F8B","aria-hidden":"true"},"#"),s(" react\u9875\u9762\u521D\u59CB\u5316\u6848\u4F8B")],-1),k={class:"table-of-contents"},d=s("\u4EE3\u7801\u793A\u4F8B"),v=i(`<h2 id="\u4EE3\u7801\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u793A\u4F8B" aria-hidden="true">#</a> \u4EE3\u7801\u793A\u4F8B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useEffect<span class="token punctuation">,</span> useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./index.scss&#39;</span>
<span class="token keyword">import</span> TitleCard <span class="token keyword">from</span> <span class="token string">&quot;./titleCard/index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> PhoneInfo <span class="token keyword">from</span> <span class="token string">&quot;./phoneInfo/index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> OtherInfo <span class="token keyword">from</span> <span class="token string">&quot;./otherInfo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&quot;@/public/request&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getQuerys <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/public/util.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GlobalMessage <span class="token punctuation">}</span><span class="token keyword">from</span> <span class="token string">&quot;../../../components/message&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> EditSuccess <span class="token keyword">from</span> <span class="token string">&quot;./editSuccess&quot;</span><span class="token punctuation">;</span>



<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> digest<span class="token punctuation">,</span> source <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getQuerys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// url digest  source\uFF1A\u6765\u6E90\u7C7B\u578B</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>isCertSuccess<span class="token punctuation">,</span> setSsCertSuccess<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// \u662F\u5426\u901A\u8FC7\u8BA4\u8BC1</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>IsSubmitIng<span class="token punctuation">,</span> setIsSubmitIng<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// \u662F\u5426\u63D0\u4EA4\u672A\u8BA4\u8BC1\u72B6\u6001</span>
    <span class="token keyword">const</span> companyInfoMock <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F01\u4E1A\u4FE1\u606Fmock\u6570\u636E</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;contact_phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;company_abs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;website&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;address_detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;legal_person&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>companyDetailInfo<span class="token punctuation">,</span> setCompanyDetailInfo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// \u5DF2\u63D0\u4EA4\u4F01\u4E1A\u4FE1\u606F</span>
        <span class="token operator">...</span>companyInfoMock
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>defaultCompanyDetailInfo<span class="token punctuation">,</span> setDefaultCompanyDetailInfo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// \u9ED8\u8BA4\u4F01\u4E1A\u4FE1\u606F\u5408\u5E76\u63D0\u4EA4\u4FE1\u606F</span>
        <span class="token operator">...</span>companyInfoMock<span class="token punctuation">,</span>
        <span class="token string-property property">&quot;default_company_abs&quot;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u4F01\u4E1A\u7B80\u4ECB</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>


    <span class="token doc-comment comment">/**
     * \u6570\u636E\u521D\u59CB\u5316
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">const</span> <span class="token function-variable function">initInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">getShowStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">getCompanyInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">getDefaultCompanyInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">setVisitEditPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">useEffect</span><span class="token punctuation">(</span>initInfo<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u662F\u5426\u8BA4\u8BC1\u8FC7
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
     * <span class="token keyword">@description</span> status
     *  0-\u4FDD\u7559\u81EA\u4E3B\u4FE1\u606F\u7B49\u6309\u94AE\uFF0C
     *  1-\u53EF\u7F16\u8F91\u7535\u8BDD\uFF0C\u7B80\u4ECB\uFF0C
     *  2-\u5DF2\u7F16\u8F91\u4FE1\u606F\u672A\u8BA4\u8BC1,
     *  3-\u5DF2\u8BA4\u8BC1\uFF0C\u5C55\u793A\u4E3A\u4F01\u4E1A\u81EA\u8FF0
     */</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getShowStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/official-info&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;get_......&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">digest</span><span class="token operator">:</span> digest
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> Status<span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> Status <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">const</span> <span class="token punctuation">{</span>status<span class="token punctuation">}</span> <span class="token operator">=</span> data <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">+</span>status <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">setSsCertSuccess</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">+</span>status <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">setIsSubmitIng</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                Message <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u5DF2\u63D0\u4EA4\u4F01\u4E1A\u4FE1\u606F
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getCompanyInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/official-info&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;get_s........&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">digest</span><span class="token operator">:</span> digest
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> status <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                data <span class="token operator">&amp;&amp;</span> <span class="token function">setCompanyDetailInfo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                Message <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u9ED8\u8BA4\u4F01\u4E1A\u4FE1\u606F
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getDefaultCompanyInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/official-info&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;get_........&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">digest</span><span class="token operator">:</span> digest
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> status <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                data <span class="token operator">&amp;&amp;</span> <span class="token function">setDefaultCompanyDetailInfo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                Message <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * \u8BB0\u5F55\u8BBF\u95EE\u6765\u6E90
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
     * <span class="token keyword">@description</span>:
     * from 1-\u5B98\u65B9\u4FE1\u606F\u7F16\u8F91\u9875\uFF0C2-\u8BA4\u9886\u81EA\u4E3B\u4FE1\u606F\u7F16\u8F91\u9875
     */</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setVisitEditPage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/official-info&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;vi......&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">digest</span><span class="token operator">:</span> digest<span class="token punctuation">,</span>
            <span class="token literal-property property">from</span><span class="token operator">:</span> source<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> status <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                Message <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> Message<span class="token punctuation">,</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>



    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;page&quot;</span><span class="token operator">&gt;</span>
                <span class="token punctuation">{</span> isCertSuccess <span class="token operator">?</span> <span class="token punctuation">(</span>
                    <span class="token operator">&lt;</span>EditSuccess companyDetailInfo<span class="token operator">=</span><span class="token punctuation">{</span>defaultCompanyDetailInfo<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
                    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>TitleCard IsSubmitIng<span class="token operator">=</span><span class="token punctuation">{</span>IsSubmitIng<span class="token punctuation">}</span>
                                   source<span class="token operator">=</span><span class="token punctuation">{</span>source<span class="token punctuation">}</span>
                                   initInfoHome<span class="token operator">=</span><span class="token punctuation">{</span>initInfo<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>PhoneInfo IsSubmitIng<span class="token operator">=</span><span class="token punctuation">{</span>IsSubmitIng<span class="token punctuation">}</span>
                                   initInfoHome<span class="token operator">=</span><span class="token punctuation">{</span>initInfo<span class="token punctuation">}</span>
                                   defaultCompanyDetailInfo<span class="token operator">=</span><span class="token punctuation">{</span>defaultCompanyDetailInfo<span class="token punctuation">}</span>
                                   companyDetailInfo<span class="token operator">=</span><span class="token punctuation">{</span>companyDetailInfo<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
                        <span class="token punctuation">{</span>IsSubmitIng <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
                            <span class="token operator">&lt;</span>OtherInfo IsSubmitIng<span class="token operator">=</span><span class="token punctuation">{</span>IsSubmitIng<span class="token punctuation">}</span>
                                       initInfoHome<span class="token operator">=</span><span class="token punctuation">{</span>initInfo<span class="token punctuation">}</span>
                                       companyDetailInfo<span class="token operator">=</span><span class="token punctuation">{</span>companyDetailInfo<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
                        <span class="token punctuation">)</span><span class="token punctuation">}</span>
                    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

            <span class="token operator">&lt;</span>GlobalMessage<span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>

    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(b,y){const a=p("RouterLink");return o(),e("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[c(a,{to:"#\u4EE3\u7801\u793A\u4F8B"},{default:l(()=>[d]),_:1})])])]),v])}var f=t(u,[["render",m],["__file","react4.html.vue"]]);export{f as default};
