import{_ as a,o as t,c as p,b as n,t as e,d as o,e as c}from"./app.4c8b15c1.js";const l={},i=n("h1",{id:"vue-computed\u8BA1\u7B97\u5C5E\u6027\u4F20\u53C2\u53D6\u503C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-computed\u8BA1\u7B97\u5C5E\u6027\u4F20\u53C2\u53D6\u503C","aria-hidden":"true"},"#"),o(" vue computed\u8BA1\u7B97\u5C5E\u6027\u4F20\u53C2\u53D6\u503C")],-1),u={class:"custom-container tip"},r=n("p",{class:"custom-container-title"},"\u8BF4\u660E\uFF1A",-1),k=n("li",null,"\u7ED9 computed \u503C return \u4E00\u4E2A\u53EF\u4F20\u53C2\u51FD\u6570",-1),d=n("li",null,"\u6CE8\uFF1A\u8FD9\u79CD\u65B9\u6CD5\u4E0D\u53EF\u4EE5\u4F20\u53C2\u7A7A\u503C\u7528else\u53D6\u503C\uFF0C\u4F1A\u62A5\u9519",-1),m=c(`<h3 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>computed<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * \u83B7\u53D6\u5F53\u524D\u5E74\u6708\u65E5\uFF082022\u5E746\u670824\u65E5\uFF09
   * <span class="token keyword">@returns</span> <span class="token punctuation">{</span>function(*): string<span class="token punctuation">}</span>
   * @\u4F7F\u7528\u8BF4\u660E getTimeNow(type) all:\u5B8C\u6574\u65E5\u671F, year:\u5E74, month:\u6708, date:\u65E5 
   * lastDate\uFF1A\u5F53\u6708\u6700\u540E\u4E00\u5929
   */</span>
    <span class="token function">getTimeNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> year <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> month <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> date <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">?</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token operator">+</span>year <span class="token operator">+</span> <span class="token string">&quot;\u5E74&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u6708&quot;</span> <span class="token operator">+</span> date <span class="token operator">+</span> <span class="token string">&quot;\u65E5 &quot;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> year <span class="token operator">+</span> <span class="token string">&#39;&#39;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;month&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token operator">+</span> <span class="token string">&#39;&#39;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> date <span class="token operator">+</span> <span class="token string">&#39;&#39;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;lastDate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">const</span> date1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
          <span class="token keyword">return</span> date1<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u4F7F\u7528\u65B9\u6CD5</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>head-tips<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u622A\u6B62\u65E5\u671F {{getTimeNow(&#39;month&#39;)}}\u6708{{getTimeNow(&#39;lastDate&#39;)}}\u65E5 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function v(s,y){return t(),p("div",null,[i,n("div",u,[r,n("ul",null,[k,d,n("li",null,"\u89E3\u6790\uFF1Acomputed\u5728 html\u4E2D"+e(s.getTimeNow)+" \u76F8\u5F53\u4E8E\u5DF2\u7ECF\u6267\u884C\u51FD\u6570 getTimeNow()\uFF0C\u8FD9\u91CC\u5229\u7528\u4E86\u51FD\u6570\u67EF\u91CC\u5316\uFF0C\u8FD4\u56DE\u4EE5\u53CA\u65B0\u7684\u51FD\u6570\uFF0C\u53EF\u4EE5\u518D\u6B21\u6267\u884C\u5E76\u4F20\u627F",1)])]),m])}var g=a(l,[["render",v],["__file","workApply20.html.vue"]]);export{g as default};
